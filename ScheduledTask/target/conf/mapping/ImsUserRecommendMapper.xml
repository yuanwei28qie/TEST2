<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.microsilver.mrcard.scheduledtask.dao.ImsUserRecommendMapper">
  <resultMap id="BaseResultMap" type="com.microsilver.mrcard.scheduledtask.model.ImsUserRecommend">
    <id column="member_id" jdbcType="BIGINT" property="memberId" />
    <result column="vip_type" jdbcType="TINYINT" property="vipType" />
    <result column="level1_parent_id" jdbcType="BIGINT" property="level1ParentId" />
    <result column="level2_parent_id" jdbcType="BIGINT" property="level2ParentId" />
    <result column="root_id" jdbcType="BIGINT" property="rootId" />
    <result column="begin_time" jdbcType="INTEGER" property="beginTime" />
    <result column="is_settlement" jdbcType="TINYINT" property="isSettlement" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    member_id, vip_type, level1_parent_id, level2_parent_id,root_id, begin_time
  </sql>
  <select id="selectByExample" parameterType="com.microsilver.mrcard.scheduledtask.model.ImsUserRecommendExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ims_user_recommend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ims_user_recommend
    where member_id = #{memberId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ims_user_recommend
    where member_id = #{memberId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.microsilver.mrcard.scheduledtask.model.ImsUserRecommendExample">
    delete from ims_user_recommend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.microsilver.mrcard.scheduledtask.model.ImsUserRecommend">
    insert into ims_user_recommend (member_id, vip_type, level1_parent_id, 
      level2_parent_id, begin_time)
    values (#{memberId,jdbcType=BIGINT}, #{vipType,jdbcType=BIT}, #{level1ParentId,jdbcType=BIGINT}, 
      #{level2ParentId,jdbcType=BIGINT}, #{beginTime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.microsilver.mrcard.scheduledtask.model.ImsUserRecommend">
    insert into ims_user_recommend
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="memberId != null">
        member_id,
      </if>
      <if test="vipType != null">
        vip_type,
      </if>
      <if test="level1ParentId != null">
        level1_parent_id,
      </if>
      <if test="level2ParentId != null">
        level2_parent_id,
      </if>
      <if test="beginTime != null">
        begin_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="memberId != null">
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="isVip != null">
        #{vipType},
      </if>
      <if test="level1ParentId != null">
        #{level1ParentId,jdbcType=BIGINT},
      </if>
      <if test="level2ParentId != null">
        #{level2ParentId,jdbcType=BIGINT},
      </if>
      <if test="beginTime != null">
        #{beginTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.microsilver.mrcard.scheduledtask.model.ImsUserRecommendExample" resultType="java.lang.Integer">
    select count(*) from ims_user_recommend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ims_user_recommend
    <set>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=BIGINT},
      </if>
      
      <if test="record.level1ParentId != null">
        level1_parent_id = #{record.level1ParentId,jdbcType=BIGINT},
      </if>
      <if test="record.level2ParentId != null">
        level2_parent_id = #{record.level2ParentId,jdbcType=BIGINT},
      </if>
      <if test="record.beginTime != null">
        begin_time = #{record.beginTime,jdbcType=INTEGER},
      </if>
      <if test="record.isSettlement != null">
        is_settlement = #{record.isSettlement},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ims_user_recommend
    set member_id = #{record.memberId,jdbcType=BIGINT},
      vip_type = #{record.vipType},
      level1_parent_id = #{record.level1ParentId,jdbcType=BIGINT},
      level2_parent_id = #{record.level2ParentId,jdbcType=BIGINT},
      begin_time = #{record.beginTime,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.microsilver.mrcard.scheduledtask.model.ImsUserRecommend">
    update ims_user_recommend
    <set>
      <if test="level1ParentId != null">
        level1_parent_id = #{level1ParentId,jdbcType=BIGINT},
      </if>
      <if test="level2ParentId != null">
        level2_parent_id = #{level2ParentId,jdbcType=BIGINT},
      </if>
      <if test="beginTime != null">
        begin_time = #{beginTime,jdbcType=INTEGER},
      </if>
      <if test="isSettlement != null">
        is_settlement = #{isSettlement},
      </if>
    </set>
    where member_id = #{memberId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.microsilver.mrcard.scheduledtask.model.ImsUserRecommend">
    update ims_user_recommend
    set vip_type = #{vipType},
      level1_parent_id = #{level1ParentId,jdbcType=BIGINT},
      level2_parent_id = #{level2ParentId,jdbcType=BIGINT},
      begin_time = #{beginTime,jdbcType=INTEGER}
    where member_id = #{memberId,jdbcType=BIGINT}
  </update>
</mapper>